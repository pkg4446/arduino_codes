//최대 전송 문자열 갯수 140, 최대 key 9개
//common: Immediate response
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "receive",
    "cmd":  "ctrl",
    "opt":  "cmd"
}
//common: Immediate response, when inner step driver run.
0



//common: error response
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "ctrl",
    "err":  "err_msg",
    "pk":   0~255
}
//error response
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "null",
    "err":  "control error",  // 본 문서에 정의된 기능이 아닌 명령어가 입력된 경우
    "pk":   0~255
}
//relay error response
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "relay",
    "err":  //"select wrong"  // 릴레이 "num" 키가 1~7이 아닌경우
            //"command null"  // "cmd" 키가 onoff, hold 가 아닌경우
    "pk":   0~255
}
//sensor error response
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "sensor",
    "err":  //"select wrong"  // 센서 set 명령어에서 센서 번호 < 16 이 아닌경우
            //"command null"  // "cmd" 키가 read, set 가 아닌경우
    "pk":   0~255
}
//moter error response
{
    "id":   "<board-id>",      // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "moter",
    "err":  //"select wrong"     // 내장 스탭모터 번호가 1~6 이 아닌경우 또는, 외장 스탭모터 번호가 1~4 가 아닌경우
            //"relay is busy"    // 릴레이 onoff 명령어 수행중 외장 스탭모터드라이버를 구동하거나, 내,외장 드라이버를 repeat 하는 경우
            //"H_bridge is busy" // dc모터 구동 명령어 수행중 외장 스탭모터드라이버를 구동하거나, 내,외장 드라이버를 repeat 하는 경우
            //"command null"     // "cmd"가 본 문서에 정의되지 않은 경우
    "pk":   0~255
}

//moter error response
{
    "id":   "<board-id>",      // 제어보드 고유 id
    "ctrl": "error",
    "cmd":  "hbridge",
    "err":  //"select wrong"     // h-bridge 연결용 외장 스탭 드라이버 포트가 1~4가 아닌경우
            //"command null"     // "cmd"가 본 문서에 정의되지 않은 경우
    "pk":   0~255
}
// error response END

//macaddr set  *eeprom 사용
{
    "ctrl": "macaddr",      //macaddr 설정
    "cmd":  250             //0~255,    최초 1회 필요, 설정 후 재부팅
}

//mqtt set  *eeprom 사용
{
    "ctrl": "dev_id",       //장치 ID 설정
    "cmd":  "foletto_2nd_f" //장치 ID, 최초 1회 필요, 설정 후 재부팅
}

// relay request example
{
    "ctrl": "relay",
    "cmd":  "onoff",    // onoff, hold
    "num":  1,          // relay number e.g. 1번 relay, unsigned char (0 to 255), relay number e.g. (1~7 relay)
    "opt":  1000,       // onoff: unsigned short 0 to 65,535, e.g. 1000 ms, // hold: bool
    "pk":   0~255
}
// relay response, onoff
{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "relay",
    "cmd":  "onoff",
    "num":  3,
    "opt":  1001,           // 실제 릴레이 작동시간(시스템 시간상 +-2 miili sec 정도 차이가 날 수 있음 )
    "pk":   0~255
}
// relay response, hold

{
    "id":   "<board-id>",   // 제어보드 고유 id
    "ctrl": "relay",
    "cmd":  "hold",
    "num":  3,
    "opt":  true,            // bool
    "pk":   0~255
}

// sensor read request
{
    "ctrl": "sensor",
    "cmd":  "read",
    "pk":   0~255
}
// sensor read response
{
    "id":   "<board-id>",     // 제어보드 고유 id
    "ctrl": "sensor",
    "cmd":  "read",
    "opt":  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], //배열 순서대로 0~15번 센서값 0:false,1:true
    "pk":   0~255
}
// sensor set request
{
    "ctrl": "sensor",
    "cmd":  "set",
    "opt":  1,          //nomal open = 1, nomal close = 0
    "num":  3,           //sensor number 0~16
    "pk":   0~255
}
// sensor set response
{
    "id":   "<board-id>",     // 제어보드 고유 id
    "ctrl": "sensor",
    "cmd":  "set",
    "sensor":[1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1], //배열 순서대로 0~15번 센서 on 일때 출력값 0:false,1:true
    "pk":   0~255
}

// step motor ctrl request "config" *eeprom 사용
{
    "ctrl":  "motor",
    "cmd":   "config",
    "opt":   1,    //0내장 드라이버, 1외장드라이버(MD5-HD14)
    "num":   1,    //motor type e.g. 1번 모터 // 0 to 255
    "max":   1000, //unsigned int 36, 가동 최대 거리 //리미트 한쪽에만 있을 경우, 리미트 인식 후 pos가 0이 되고, 이후 최대 max 까지만 회전
    "brk":   1,    //브레이크 릴레이 번호,
    "dir0":  0,     //원점 회귀방향, 0,1 일때 서로 반대, 기본값 0
    "pk":   0~255
}
// step motor ctrl response "config"
{
    "id":   "foletto_2nd_f",
    "ctrl": "motor",
    "cmd":  "set",
    "opt":  true,
    "num":  1,
    "max":  1000,
    "brk":  1,
    "dir0": 0,
    "pk":   0~255
}

// step motor ctrl request "set"    *eeprom 사용
{
    "ctrl":  "motor",
    "cmd":   "set",
    "opt":   1,   //0내장 드라이버, 1외장드라이버(MD5-HD14)
    "num":   1,   //motor type e.g. 1번 모터 // 0 to 255
    "accel": 10,  //가속 구간 스탭 수 unsigned int16 - 0 to 65535
    "decel": 5,   //감속 구간 스탭 수 unsigned int16 - 0 to 65535
    "dla_s": 1,   //unsigned int 16, 모터 스탭간격 micro sec, delay_short
    "dla_l": 100, //unsigned int 16, 모터 스탭간격 micro sec, delay_long > delay_short    
    "pk":   0~255
}
// step motor ctrl response "set"
{
    "id":    "foletto_2nd_f",
    "ctrl":  "motor",
    "cmd":   "set",
    "opt":   false,
    "num":   1,
    "accel": 10,
    "decel": 5,
    "dla_s": 1,
    "dla_l": 100,
    "pk":   0~255
}

// step motor ctrl request "run"
{
    "ctrl":  "motor",
    "cmd":   "run",
    "opt":   1,   //0내장 드라이버, 1외장드라이버(MD5-HD14)
    "num":   1,   //motor type e.g. 1번 모터 // 0 to 255
    "step":  100, //스탭 수 (n 스탭당 1회전) unsigned int32 - 0 to 4294967295        
    "dir":   1,   //step motor direction (CW/CCW), 0:CW, 1:CCW
    "limit": 4,   //모터 진행방향 리미트센서 번호 = sensor_read 번호, 16이상일 경우 인식 안함.
    "add":   100, //리미트 인식 후 추가 진행 스탭 // 추가 스탭은 step 범위 이내에서 리미트를 인식할 경우만 작동함.
    "pk":   0~255
}
// step motor ctrl response "run"
{
    "id":   "<board-id>", // 제어보드 고유 id
    "ctrl": "motor",
    "cmd":  "run",
    "opt":  false,
    "num":  1,
    "zero": false,
    "pos":  100,
    "pk":   0~255
}

// step motor ctrl request "repeat"
// 외장드라이버 펌핑 모터 예제
// repeat 3번 full step으로 반복 후, add_step이 50이면 full_step의 50% step만 반복
// add_step: 0이면 full_step만 repeat만큼 반복(1주기를 repeat 만큼 반복)
// 가감속 set 존재. 
{
    "ctrl":  "motor",
    "cmd":   "repeat",
    "opt":   1,   //0내장 드라이버, 1외장드라이버(MD5-HD14)
    "num":   1,   //motor type e.g. 1번 모터 // 0 to 255
    "full_step":  7000, // 펌핑 모터 풀 스텝 
                  // unsigned int32 - 0 to 4294967295    
    "add_step": 50, // repeat이 3회라면, 
    "dir":   1,   // step motor direction (CW/CCW), 0:CW, 1:CCW
                  // 펌핑 모터 내려가는 방향. 
    "limit": 6,   // 펌핑 모터 home 센서
                  // home에 위치해야 구동가능하고, 한 주기 펌핑한 뒤 home까지 위치해야함. 
    "repeat":  5,   //반복횟수
    "pk":   0~255
}

// step motor ctrl request "repeat"
// 내장드라이버 믹싱 모터 예제
// repeat 3번 step만큼 1주기(dir값과 dir 반전값으로)를 repeat 만큼반복
// 가감속 set 존재. 
{
    "ctrl":  "motor",
    "cmd":   "repeat",
    "opt":   0,   //0내장 드라이버, 1외장드라이버(MD5-HD14)
    "num":   1,   //motor type e.g. 1번 모터 // 0 to 255
    "full_step":  400, // 펌핑 모터 풀 스텝 
                  // unsigned int32 - 0 to 4294967295    
    "add_step": 0,
    "dir":   1,     // step motor direction (CW/CCW), 0:CW, 1:CCW
    "limit": 16,    // 믹싱 모터 limit 센서 X
    "repeat":  3,   // 반복횟수
    "pk":   0~255
}


// step motor ctrl response "repeat"
{
    "id":   "<board-id>", // 제어보드 고유 id
    "ctrl": "motor",
    "cmd":  "run",
    "opt":  false,
    "num":  1,
    "zero": false,
    "pos":  100
    "pk":   0~255
}

// step motor ctrl response
{
    "id":     "<board-id>", // 제어보드 고유 id
    "ctrl":   "step",
    "cmd":    "run",
    "opt":    1,            // 0:내장 드라이버, 1:외장 드라이버
    "num":    1,            // 모터 번호
    "zero":   false,        // 영점 확인 여부
    "pos":    999           // 모터 위치
    "pk":     0~255
}

// dc motor ctrl request "repeat"
// 외장드라이버 포트로 H-bridge 사용
{
    "ctrl":   "hbridge",
    "cmd":    "run",
    "num":    1,    // motor type e.g. 1번 모터 // 0 to 255
    "sec":    7000, // 한방향 회전시간 (milli sec) unsigned int 16
    "repeat": 3,    // 반복횟수 // 0 to 127
    "pk":   0~255
}

{
    "ctrl":   "hbridge",
    "cmd":    "stop",
    "pk":   0~255
}
//정지

// dc motor ctrl response 동작 정지시, run, stop 명령 동일
{
    "id":     "<board-id>", // 제어보드 고유 id
    "ctrl":   "hbridge",
    "cmd":    "done",
    "pk":   0~255
}
//


//스탭모터 리미트 사용하지 않는 경우는 센서 번호 >= 16
//스탭모터 브레이크 사용하지 않는 경우는 브레이크 릴레이 번호 == 0
//외부 드라이버(MD5-HD14)의 경우 단독으로만 작동 가능. 작동하는동안 외부 간섭 불가

/**********************************************************************************/
//스탭모터의 동작 스탭이 가속, 감속 스탭의 합보다 작은경우의 처리 추가예정.
//스탭모터 pos 리셋 추가 예정.
//하단 리미트에서 상단 리미트 센서까지의 스탭 측정 기능 추가 예정
//hx720 센서를 이용한 로드셀 사용 기능 추가 예정
/**********************************************************************************/